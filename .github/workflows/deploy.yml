name: Deploy Instagram Auto Poster

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

env:
  DOCKER_IMAGE_NAME: instagram-auto-poster
  CONTAINER_NAME: instagram-auto-poster

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE_NAME }}:test .
        
    - name: Test Docker image
      run: |
        # Start container in background
        docker run -d --name test-container \
          -p 5002:5002 \
          -e INSTAGRAM_USERNAME=test \
          -e INSTAGRAM_PASSWORD=test \
          -e VNC_PASSWORD=test123 \
          ${{ env.DOCKER_IMAGE_NAME }}:test
        
        # Wait for container to start
        sleep 30
        
        # Test health endpoint
        curl -f http://localhost:5002/health || exit 1
        
        # Cleanup
        docker stop test-container
        docker rm test-container

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build production Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .
        docker save ${{ env.DOCKER_IMAGE_NAME }}:latest | gzip > instagram-auto-poster.tar.gz
        
    - name: Copy files to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: ${{ secrets.VPS_PORT || 22 }}
        source: "instagram-auto-poster.tar.gz,docker-compose.yml,.env.example,vnc_profile"
        target: "/home/${{ secrets.VPS_USERNAME }}/instagram-auto-poster/"
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: ${{ secrets.VPS_PORT || 22 }}
        script: |
          cd /home/${{ secrets.VPS_USERNAME }}/instagram-auto-poster/
          
          # Load the Docker image
          echo "Loading Docker image..."
          docker load < instagram-auto-poster.tar.gz
          
          # Create .env file if it doesn't exist
          if [ ! -f .env ]; then
            echo "Creating .env file from template..."
            cp .env.example .env
            echo "⚠️  IMPORTANT: Please edit .env file with your Instagram credentials!"
            echo "⚠️  Default VNC password: instagram123"
          fi
          
          # Create necessary directories
          mkdir -p content logs
          
          # Stop existing container if running
          echo "Stopping existing container..."
          docker-compose down || true
          
          # Remove old images to save space
          echo "Cleaning up old Docker images..."
          docker image prune -f || true
          
          # Start new container
          echo "Starting new container..."
          docker-compose up -d
          
          # Wait for container to be healthy
          echo "Waiting for container to be healthy..."
          sleep 30
          
          # Check if container is running
          if docker-compose ps | grep -q "Up"; then
            echo "✅ Deployment successful!"
            echo "📱 Instagram Auto Poster is running at:"
            echo "   Web Interface: http://${{ secrets.VPS_HOST }}:5002"
            echo "   VNC Web Access: http://${{ secrets.VPS_HOST }}:6080"
            echo "   Direct VNC: ${{ secrets.VPS_HOST }}:5901"
            echo ""
            echo "🔐 Default VNC Password: instagram123"
            echo "⚙️  Please configure your Instagram credentials in the settings page"
          else
            echo "❌ Deployment failed - container is not running"
            docker-compose logs
            exit 1
          fi
          
          # Cleanup
          rm -f instagram-auto-poster.tar.gz 