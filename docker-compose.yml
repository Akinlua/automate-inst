version: '3.8'

services:
  instagram-auto-poster:
    build: .
    container_name: instagram-auto-poster
    restart: unless-stopped
    ports:
      - "5002:5002"    # Flask app
      - "6080:6080"    # VNC web interface
      - "5901:5901"    # VNC direct access
    
    # Chrome/Selenium optimizations
    shm_size: 2gb  # Increase shared memory for Chrome
    security_opt:
      - seccomp:unconfined  # Required for Chrome sandboxing in Docker
    
    # Resource limits to prevent Chrome from consuming all memory
    deploy:
      resources:
        limits:
          memory: 3g
        reservations:
          memory: 1g
    
    environment:
      # Instagram credentials
      - INSTAGRAM_USERNAME=${INSTAGRAM_USERNAME:-your_instagram_username}
      - INSTAGRAM_PASSWORD=${INSTAGRAM_PASSWORD:-your_instagram_password}
      
      # OpenAI API configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your_openai_api_key}
      
      # VNC configuration
      - VNC_PASSWORD=${VNC_PASSWORD:-instagram123}
      - VNC_DISPLAY=:1
      - VNC_PORT=5901
      - VNC_WEB_PORT=6080
      
      # Flask configuration
      - FLASK_ENV=production
      - FLASK_APP=app.py
      - PYTHONUNBUFFERED=1
      
      # Content directory
      - CONTENT_DIR=/app/content
      
      # Posting configuration
      - POST_HOUR=${POST_HOUR:-12}
      - POST_MINUTE=${POST_MINUTE:-0}
      - USE_CHATGPT=${USE_CHATGPT:-false}
      
      # Display configuration
      - DISPLAY=:1
      
      # Chrome/Docker optimizations
      - CHROME_DISABLE_GPU=true
      - CHROME_NO_SANDBOX=true
      
    volumes:
      # Persist content, logs, and Chrome profile
      - ./content:/app/content
      - ./logs:/app/logs
      - chrome_profile:/app/chrome_profile_instagram
      
      # JSON files as bind mounts (will be created by container if they don't exist)
      # Note: These will be created by the container startup script
      # - ./data/posted_content.json:/app/posted_content.json
      # - ./data/image_order.json:/app/image_order.json  
      # - ./data/scheduler_settings.json:/app/scheduler_settings.json
      # - ./data/scheduler_errors.json:/app/scheduler_errors.json
      
    networks:
      - instagram-network
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Named volumes for data persistence
volumes:
  chrome_profile:
    driver: local
  
# Custom network
networks:
  instagram-network:
    driver: bridge 